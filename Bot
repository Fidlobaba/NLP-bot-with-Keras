
import numpy as np # linear algebra
import pandas as pd # data processing, CSV file I/O (e.g. pd.read_cs

import nltk
import re

South_Park = pd.read_csv('/kaggle/input/southparklines/All-seasons.csv', sep = '/t', names=['label', 'text'], header= None)

South_Park['label_clean'] = South_Park['label'].str.replace('[^\w\s]','')
South_Park.head()
def tokinize(text):
    tokens = re.split('\W+',  text)
    return tokens
South_Park['label_tokinize'] = South_Park['label_clean'].apply(lambda x: tokinize(x.lower()))
South_Park.head()

common_word= nltk.corpus.stopwords.words('english')
def remove_stopwords(labels_tokinize):
    text = [word for word in labels_tokinize if word not in common_word]
    return text
South_Park['not_common_word'] = South_Park['label_tokinize'].apply(lambda x : remove_stopwords(x))
South_Park['not_common_word'].head()


porter = nltk.PorterStemmer()
lancaster=LancasterStemmer()
my_lines_list=[]
pip install tensorflow keras pickle nltk 

def stremming(tokinizeText):
    Text = [porter.stem(word) for word in  tokinizeText]
    return Text

South_Park['text_stemmed'] = South_Park['not_common_word'].apply(lambda x : stremming(x))
for line in South_Park['not_common_word']:
    my_lines_list.append(South_Park['not_common_word'])
